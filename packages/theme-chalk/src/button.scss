@use "sass:map";

@import "./common/variables.scss";
@import "./mixins/mixin.scss";
@import "./mixins/_variables.scss";
@import "./mixins/_button.scss";
@import "./mixins/utils.scss";

@include b(button) {
  @include set-component-css-var('button', $--button);
}

@include b(button){ // y-button
  display: inline-block;
  line-height: 1;
  min-height: 30px;

  outline: none;
  user-select: none;
  padding: 0 15px;
  vertical-align: middle;
  
  background: var(
    --y-button-background-color,
    map.get($--button, 'background-color')
  );

  border: var(--y-border-base);
  border-color: var(
    --y-button-border-color,
    map.get($--button, 'border-color')
  );

  color: var(--y-button-font-color, map.get($--button, 'font-color'));
  text-align: center;
  font-weight: var(--y-button-font-weight);

  @include utils-user-select(none);

  & [class*="y-icon-"]{
    vertical-align: middle;
    & + span{
      margin-left: 5px;
    }
  }

  @include when(disabled){
    &,
    &.hover,
    &.focus {
      color: var(--y-button-disabled-font-color);
      cursor: not-allowed;
      background-image: none;
      background-color: var(--y-button-disabled-background-color);
      border-color: var(--y-button-disabled-border-color);
    }
    &.#{$namespace}-button--text {
      background-color: transparent;
    }

    &.is-plain {
      &,
      &:hover,
      &:focus {
        background-color: var(--y-color-white);
        border-color: var(--y-button-disabled-border-color);
        color: var(--y-button-disabled-font-color);
      }
    }
  }

  @include when(loading){
    pointer-events: none;
  }

  @include when(round){
    border-radius: 15px;
  }

  @include when(circle) {
    border-radius: 50%;
    padding: map.get($--button-padding-vertical, 'default');
  }

  @each $type in (primary, success, info, danger, warning) {
    @include m($type) {
      --y-button-font-color: #{map.get($--button-font-color, $type)};
      --y-button-background-color: #{map.get($--button-background-color, $type)};
      --y-button-border-color: #{map.get($--button-border-color, $type)};
      --y-button-hover-color: #{map.get($--colors, $type, 'light-2')};
      --y-button-active-font-color: #{darken(
        map.get($--button-font-color, $type),
        $--button-active-shade-percent
      )};
      --y-button-active-background-color: #{darken(
        map.get($--button-background-color, $type),
        $--button-active-shade-percent
      )};
      --y-button-border-color: #{darken(
        map.get($--button-border-color, $type),
        $--button-active-shade-percent
      )};

      @include button-variant($type);
    }
  }
}